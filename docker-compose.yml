version: "3.9"

networks:
  traefik-network: {}
  user-auth: {}
  user-events: {}

services:

  reverse-proxy:
    #image: traefik:v2.4
    build: ./traefik
    container_name: traefik
    command:
      #    - --log.level=DEBUG
      #    - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
   #   - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik"
      - "--providers.file.watch=true"
      - "--configFile=./etc/traefik/traefik.yml"
      #HTTP to HTTPS redirect
    #      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
    #      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
    #      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    #      - "--certificatesresolvers.myresolver.acme.email=wi19002@lehre.dhbw-stuttgart.de"
    #      - "--certificatesresolvers.myresolver.acme.storage=/cert/acme.json"
    ports:
      #    - "80:80"
      - "443:443"
      #enabled die Browser OberflÃ¤che zusammen mit api insecure= true
  #    - "8080:8080"
    volumes:
      #Volumes are necessary for the nodemon integration -> no rebuilding necessary
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/configuration:/etc/traefik/dynamic/certs-traefik.yaml"
      - "./traefik/configuration/certificates:/etc/certs/"
      #necessary for Lets encrypt
    #      - "./traefik/letsencrypt:/letsencrypt/"
    networks:
      - traefik-network
    labels:
      #      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      # - "traefik.http.routers.http-catchall.entrypoints=websecure"
      #    - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      #     - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.docker.network=traefik-network"


  user_db:
    image: mongo:latest
    container_name: user_db
    networks:
      - user-auth

  user_events_db:
    image: mongo:latest
    container_name: user_events_db
    networks:
      - user-events

  user_logins:
    build: ./user_logins
    container_name: user-logins
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user_logins.rule=Path(`/register`) || Path(`/login`) || Path(`/getUser`)"
      #http redirect
      - "traefik.http.routers.user_logins.entrypoints=websecure"
      - "traefik.http.routers.user_logins.tls=true"
    #      - "traefik.http.routers.user_logins.tls.certresolver=myresolver"
    volumes:
      - ./user_logins:/app
    networks:
      - traefik-network
      - user-auth

  user_events:
    build: ./user_events
    container_name: user-events
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user_events.rule=Path(`/events`) || Path(`/medications`) || Path(`/files`) || Path(`/folders`)"
      #http redirect
      - "traefik.http.routers.user_events.entrypoints=websecure"
      - "traefik.http.routers.user_events.tls=true"
    #      - "traefik.http.routers.user_logins.tls.certresolver=myresolver"

    volumes:
      - ./user_events:/app
    networks:
      - traefik-network
      - user-events